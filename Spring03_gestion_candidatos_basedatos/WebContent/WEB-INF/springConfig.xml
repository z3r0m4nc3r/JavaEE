<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
<!-- 1º Habilitamos la configuracion mediante anotaciones -->
	<context:annotation-config/>
	<!-- 2º Escanea los paquetes para buscar clases que instanciar -->
	<context:component-scan base-package="service"/>
	
	
	
<!-- 3º Añadimos datos de conexion. DataSource propio de Spring-->
	<bean id="data" name="data"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url"
			value="jdbc:mysql://localhost:3306/empresa?serverTimezone=Europe/Madrid">
		</property>
		<property name="driverClassName"
			value="com.mysql.cj.jdbc.Driver">
		</property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>
	
	<!-- DataSources del servidor de aplicaciones. habilitar primero namespace jee -->
	
	<jee:jndi-lookup jndi-name="refempresa" id="data2"/>
</beans>
